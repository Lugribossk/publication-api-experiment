Ext.data.JsonP.QueryParameters({"tagname":"class","name":"QueryParameters","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"author":["Bo Gotthardt"]},"private":null,"id":"class-QueryParameters","members":{"cfg":[],"property":[],"method":[{"name":"constructor","tagname":"method","owner":"QueryParameters","meta":{},"id":"method-constructor"},{"name":"toQueryString","tagname":"method","owner":"QueryParameters","meta":{},"id":"method-toQueryString"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":5,"files":[{"filename":"QueryParameters.js","href":"QueryParameters.html#QueryParameters"}],"html_meta":{"author":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/QueryParameters.html#QueryParameters' target='_blank'>QueryParameters.js</a></div></pre><div class='doc-contents'><p>Query parameter parsing.\nThe parameters are placed directly as properties on the object.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='QueryParameters'>QueryParameters</span><br/><a href='source/QueryParameters.html#QueryParameters-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/QueryParameters-method-constructor' class='name expandable'>QueryParameters</a>( <span class='pre'>[frame]</span> ) : <a href=\"#!/api/QueryParameters\" rel=\"QueryParameters\" class=\"docClass\">QueryParameters</a></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frame</span> : Window (optional)<div class='sub-desc'><p>The window to parse query parameters for. Optional, defaults to the current frame.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/QueryParameters\" rel=\"QueryParameters\" class=\"docClass\">QueryParameters</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-toQueryString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='QueryParameters'>QueryParameters</span><br/><a href='source/QueryParameters.html#QueryParameters-method-toQueryString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/QueryParameters-method-toQueryString' class='name expandable'>toQueryString</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Returns the query parameters as a string, including the leading ? if applicable. ...</div><div class='long'><p>Returns the query parameters as a string, including the leading ? if applicable.\nIf the parameters happen to have a \"toQueryString\" key, you need to use QueryParameters.prototype.toQueryString.call(x) instead.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>"});